services:
  next-server:
    container_name: ls-next-server
    build:
      context: ./next-server
      dockerfile: Dockerfile
    environment:
      TEMP_USER_MAIL: ${TEMP_USER_MAIL}
      TEMP_USER_PASSWORD: ${TEMP_USER_PASSWORD}
    ports:
      - "3000:3000"

  express-server:
    container_name: ls-express-server
    build:
      context: ./express-server
      dockerfile: Dockerfile
    environment:
      FASTAPI_SERVER: "http://fastapi-server:8000/"
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      HASH_SALT: ${HASH_SALT}
      JWT_SECRET: ${JWT_SECRET}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASS: ${MAIL_PASS}
      MAIL_SENDER: ${MAIL_SENDER}
      OTP_SECRET: ${OTP_SECRET}
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-server:5432/${POSTGRES_DB}"
    ports:
      - "5000:5000"
    depends_on:
      - postgres-server

  fastapi-server:
    container_name: ls-fastapi-server
    build:
      context: ./fastapi-server
      dockerfile: Dockerfile
    environment:
      MODEL_NAME: ${MODEL_NAME}
    volumes:
      - ./nltk_data:/root/nltk_data
      - ./huggingface:/root/.cache/huggingface

  postgres-server:
    container_name: ls-postgres-server
    image: postgres:alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - "./psql_data:/var/lib/postgresql/data"
