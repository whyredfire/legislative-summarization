name: Build and Push to GHCR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta for next server
        id: meta-next
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/whyredfire/ls-next-server

      - name: Build and Push Docker Image for next server
        uses: docker/build-push-action@v6
        with:
          context: next-server
          push: true
          tags: ${{ steps.meta-next.outputs.tags }}
          labels: ${{ steps.meta-next.outputs.tags }}
          cache-from: type=registry,ref=ghcr.io/whyredfire/ls-next-server:buildcache
          cache-to: type=registry,ref=ghcr.io/whyredfire/ls-next-server:buildcache,mode=max

      - name: Docker meta for express server
        id: meta-express
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/whyredfire/ls-express-server

      - name: Build and Push Docker Image for express server
        uses: docker/build-push-action@v6
        with:
          context: express-server
          push: true
          tags: ${{ steps.meta-express.outputs.tags }}
          labels: ${{ steps.meta-express.outputs.tags }}
          cache-from: type=registry,ref=ghcr.io/whyredfire/ls-express-server:buildcache
          cache-to: type=registry,ref=ghcr.io/whyredfire/ls-express-server:buildcache,mode=max

      - name: Docker meta for fastapi server
        id: meta-fastapi
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/whyredfire/ls-fastapi-server

      - name: Build and Push Docker Image for fastapi server
        uses: docker/build-push-action@v6
        with:
          context: fastapi-server
          push: true
          tags: ${{ steps.meta-fastapi.outputs.tags }}
          labels: ${{ steps.meta-fastapi.outputs.tags }}
          cache-from: type=registry,ref=ghcr.io/whyredfire/ls-fastapi-server:buildcache
          cache-to: type=registry,ref=ghcr.io/whyredfire/ls-fastapi-server:buildcache,mode=max
